name: BMI application workflow

on:
  workflow_dispatch:

  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - '.github/workflows/app-workflow.yaml'

  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - '.github/workflows/app-workflow.yaml'

jobs:

  project-build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install Maven dependencies
        run: mvn install 

      - name: Run unit tests
        run: mvn --batch-mode --update-snapshots verify 

  # Analyse de dépendances (OWASP Dependency-Check)
  security-sca:
    runs-on: self-hosted
    needs: project-build
    steps:
      - uses: actions/checkout@v3
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "BMI Application"
          path: ./src
          format: "HTML"
          out: "dependency-check-report"
      - name: Upload Dependency-Check report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: dependency-check-report

  #  Analyse statique du code avec SpotBugs + FindSecurityBugs
  security-sast:
    runs-on: self-hosted
    needs: project-build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Run SpotBugs
        run: mvn com.github.spotbugs:spotbugs-maven-plugin:4.7.3.0:spotbugs
      - name: Upload SpotBugs report
        uses: actions/upload-artifact@v3
        with:
          name: spotbugs-report
          path: target/spotbugsXml.xml

  docker-build:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: self-hosted
    needs:
      - project-build
      - security-sca
      - security-sast

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run package
        run: mvn package 

      - name: Build Docker image
        run: docker build -t clientservice:latest .

  
  # Scan de l’image Docker avec Trivy
  container-scan:
    runs-on: self-hosted
    needs: docker-build
    steps:
      - name: Install Trivy
        run: |
          sudo apt-get update && sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.50.1_Linux-64bit.deb
          sudo dpkg -i trivy_0.50.1_Linux-64bit.deb

      - name: Scan Docker Image
        run: trivy image --severity HIGH,CRITICAL --exit-code 0 clientservice:latest

      - name: Tag & Push Docker image
        run: |
          docker tag clientservice:latest registry.dev.svc.cluster.local:5000/clientservice:latest
          docker push registry.dev.svc.cluster.local:5000/clientservice:latest
  
  Test-on-cluster:
    runs-on: self-hosted
    needs: container-scan
    steps:
      - run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Preparing cluster for deploy
        run: |
          RUNNER_TRACKING_ID="" && kubectl apply -f k8s-specs/

